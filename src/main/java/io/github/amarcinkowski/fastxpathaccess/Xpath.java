package io.github.amarcinkowski.fastxpathaccess;

import java.io.IOException;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.List;

import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactory;

import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;

/*
 * This Java source file was auto generated by running 'gradle buildInit --type java-library'
 * by 'amarcinkowski' at '22.10.16 16:31' with Gradle 2.10
 *
 * @author amarcinkowski, @date 22.10.16 16:31
 */
public class Xpath {

	private static XPathFactory xpathFactory = XPathFactory.newInstance();
	private static XPath xpath = xpathFactory.newXPath();

	private static InputSource fileToInputSource(Path path) throws UnsupportedEncodingException, IOException {
		String xml = new String(Files.readAllBytes(path), "UTF-8");
		InputSource source = new InputSource(new StringReader(xml));
		return source;
	}

	private static List<String> nodeList2Strings(NodeList nodes) {
		List<String> attributeValues = new ArrayList<>();
		for (int i = 0; i < nodes.getLength(); i++) {
			attributeValues.add(nodes.item(i).getTextContent());
		}
		return attributeValues;
	}

	public static String[] find(Path filepath, String xpathString) throws IOException, XPathExpressionException {
		InputSource source = fileToInputSource(filepath);
		NodeList nodes = (NodeList) xpath.evaluate(xpathString, source, XPathConstants.NODESET);
		return nodeList2Strings(nodes).toArray(new String[] {});
	}

}
